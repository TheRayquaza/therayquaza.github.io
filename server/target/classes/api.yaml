openapi: 3.0.3
info:
  title: ML spot API
  version: 1.0.0-SNAPSHOT
servers:
  - url: http://localhost:8082
    description: Used with quarkus:dev
  - url: http://localhost:8080
    description: Used in production environment
tags:
  - name: Project
  - name: Blog
paths:
  /projects:
    get:
      tags:
        - Project
      summary: Get all projects
      description: Get all projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
    post:
      tags:
        - Project
      summary: Create a new project
      description: Create a new project
      requestBody:
        description: The project name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
        "400":
          description: The request body was invalid
  /projects/{id}:
    get:
      tags:
        - Project
      summary: Get a single project description
      description: Get a single project description
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the project to retrieve
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        "404":
          description: Project not found
    delete:
      tags:
        - Project
      summary: Delete a single project
      description: Delete a single project
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the project to retrieve
      responses:
        "200":
          description: OK
        "404":
          description: Project not found
    put:
      tags:
        - Project
      summary: Modify a single project content
      description: Modify a single project content
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the project to retrieve
      requestBody:
        description: The project information to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyProjectRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        "404":
          description: Project not found
        "400":
          description: Invalid request

  /blogs:
    get:
      tags:
        - Blog
      summary: Get all blogs
      description: Get all blogs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogResponse'
    post:
      tags:
        - Blog
      summary: Create a new blog
      description: Create a new blog
      requestBody:
        description: The blog name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlogRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogResponse'
        "400":
          description: Invalid request content
  /blogs/{id}:
    get:
      tags:
        - Blog
      summary: Get a single blog
      description: Get a single blog by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the blog to retrieve
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogResponse'
        "404":
          description: Blog not found
    delete:
      tags:
        - Blog
      summary: Delete a single blog
      description: Delete a single blog
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the blog to retrieve
      responses:
        "200":
          description: OK
        "404":
          description: Blog not found
    put:
      tags:
        - Blog
      summary: Modify a single blog
      description: Modify a single blog
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the blog
      requestBody:
        description: The blog title
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyBlogRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogResponse'
        "404":
          description: Blog not found
        "400":
          description: Invalid request
components:
  schemas:
    ProjectResponse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        technologies:
          type: array
          items:
            type: string
        startingDate:
          format: date-time
          type: string
        finishedDate:
          format: date-time
          type: string
        group:
          type: integer
        link:
          type: string
    BlogResponse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        content:
          type: array
          items:
            $ref: '#/components/schemas/BlogContentResponse'
    BlogContentResponse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        type:
          type: string
          enum: [LINK, TEXT, IMAGE]
        content:
          type: string
    CreateProjectRequest:
      type: object
      properties:
        name:
          type: string
    CreateBlogRequest:
      type: object
      properties:
        title:
          type: string
    ModifyProjectRequest:
      type: object
      properties:
        name:
          type: string
        technologies:
          type: array
          items:
            type: string
        startingDate:
          type: string
          format: date-time
        finishedDate:
          type: string
          format: date-time
        members:
          type: integer
          format: int64
        link:
          type: string
    ModifyBlogRequest:
      type: object
      properties:
        title:
          type: string
